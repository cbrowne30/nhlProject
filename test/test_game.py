# coding: utf-8

"""
    NHL API

    Documenting the publicly accessible portions of the NHL API.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.game import Game

class TestGame(unittest.TestCase):
    """Game unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Game:
        """Test Game
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Game`
        """
        model = Game()
        if include_optional:
            return Game(
                copyright = '',
                game_pk = 2017020851,
                link = '/api/v1/game/2017020851/feed/live',
                meta_data = openapi_client.models.game_meta_data.Game_metaData(
                    wait = 10, 
                    time_stamp = '20180211_054345', ),
                game_data = openapi_client.models.game_game_data.Game_gameData(
                    game = openapi_client.models.game_game_data_game.Game_gameData_game(
                        pk = 2017020851, 
                        season = '20172018', 
                        type = 'R', ), 
                    datetime = openapi_client.models.game_game_data_datetime.Game_gameData_datetime(
                        date_time = '2018-02-11T03:00Z', 
                        end_date_time = '2018-02-11T05:30:42Z', ), 
                    status = openapi_client.models.game_game_data_status.Game_gameData_status(
                        abstract_game_state = 'Final', 
                        coded_game_state = '7', 
                        detailed_state = 'Final', 
                        status_code = '7', 
                        start_time_tbd = True, ), 
                    teams = openapi_client.models.game_game_data_teams.Game_gameData_teams(
                        away = openapi_client.models.team.Team(
                            id = 28, 
                            name = 'San Jose Sharks', 
                            link = '/api/v1/teams/28', 
                            venue = openapi_client.models.venue.Venue(
                                name = 'SAP Center at San Jose', 
                                link = '/api/v1/venues/null', 
                                city = 'San Jose', 
                                time_zone = openapi_client.models.venue_time_zone.Venue_timeZone(
                                    id = 'America/Los_Angeles', 
                                    offset = -8, 
                                    tz = 'PST', ), ), 
                            abbreviation = 'SJS', 
                            tri_code = 'SJS', 
                            team_name = 'Sharks', 
                            location_name = 'San Jose', 
                            first_year_of_play = 1990, 
                            division = openapi_client.models.standings_records_inner_division.Standings_records_inner_division(
                                id = 15, 
                                name = 'Pacific', 
                                link = '/api/v1/divisions/15', ), 
                            conference = openapi_client.models.division_conference.Division_conference(
                                id = 5, 
                                name = 'Western', 
                                link = '/api/v1/conferences/5', ), 
                            franchise = openapi_client.models.franchise.Franchise(
                                id = 29, 
                                name = 'Sharks', 
                                link = '/api/v1/franchises/29', ), 
                            roster = openapi_client.models.team_roster.Team_roster(), 
                            next_game_schedule = openapi_client.models.team_next_game_schedule.Team_nextGameSchedule(
                                total_items = 1, 
                                total_events = 0, 
                                total_games = 1, 
                                total_matches = 0, 
                                dates = [
                                    openapi_client.models.team_next_game_schedule_dates_inner.Team_nextGameSchedule_dates_inner(
                                        date = 'Fri Feb 09 19:00:00 EST 2018', 
                                        total_items = 1, 
                                        total_events = 0, 
                                        total_games = 1, 
                                        total_matches = 0, 
                                        games = [
                                            openapi_client.models.team_next_game_schedule_dates_inner_games_inner.Team_nextGameSchedule_dates_inner_games_inner(
                                                game_pk = 2017020851, 
                                                link = '/api/v1/game/2017020851/feed/live', 
                                                game_type = 'R', 
                                                season = '20172018', 
                                                game_date = '2018-02-11T03:00Z', 
                                                content = openapi_client.models.schedule_game_content.ScheduleGame_content(
                                                    link = '/api/v1/game/2017020851/content', ), )
                                            ], 
                                        events = [
                                            None
                                            ], 
                                        matches = [
                                            None
                                            ], )
                                    ], ), 
                            short_name = 'San Jose', 
                            official_site_url = 'http://www.sjsharks.com', 
                            franchise_id = 29, 
                            active = True, ), 
                        home = openapi_client.models.team.Team(
                            id = 28, 
                            name = 'San Jose Sharks', 
                            link = '/api/v1/teams/28', 
                            abbreviation = 'SJS', 
                            tri_code = 'SJS', 
                            team_name = 'Sharks', 
                            location_name = 'San Jose', 
                            first_year_of_play = 1990, 
                            short_name = 'San Jose', 
                            official_site_url = 'http://www.sjsharks.com', 
                            franchise_id = 29, 
                            active = True, ), ), 
                    players = openapi_client.models.player.Player(
                        id = 8466138, 
                        full_name = 'Joe Thornton', 
                        link = '/api/v1/people/8466138', 
                        first_name = 'Joe', 
                        last_name = 'Thornton', 
                        primary_number = '19', 
                        birth_date = 'Sun Jul 01 20:00:00 EDT 1979', 
                        current_age = 38, 
                        birth_city = 'London', 
                        birth_state_province = 'ON', 
                        birth_country = 'CAN', 
                        nationality = 'CAN', 
                        height = '6' 4"', 
                        weight = 220, 
                        active = True, 
                        alternate_captain = True, 
                        captain = True, 
                        rookie = True, 
                        shoots_catches = 'L', 
                        roster_status = 'I', 
                        current_team = openapi_client.models.player_current_team.Player_currentTeam(
                            id = 28, 
                            name = 'San Jose Sharks', 
                            link = '/api/v1/teams/28', ), 
                        primary_position = openapi_client.models.draft_prospect_primary_position.DraftProspect_primaryPosition(
                            code = 'C', 
                            name = 'Center', 
                            type = 'Forward', 
                            abbreviation = 'C', ), ), 
                    venue = openapi_client.models.game_game_data_venue.Game_gameData_venue(
                        name = 'SAP Center at San Jose', 
                        link = '/api/v1/venues/null', ), ),
                live_data = openapi_client.models.game_live_data.Game_liveData(
                    plays = openapi_client.models.game_live_data_plays.Game_liveData_plays(
                        all_plays = [
                            openapi_client.models.game_play.GamePlay(
                                players = [
                                    openapi_client.models.game_play_players_inner.GamePlay_players_inner(
                                        player = openapi_client.models.game_play_players_inner_player.GamePlay_players_inner_player(
                                            id = 8476881, 
                                            full_name = 'Tomas Hertl', 
                                            link = '/api/v1/people/8476881', ), 
                                        player_type = 'Winner', )
                                    ], 
                                result = openapi_client.models.game_play_result.GamePlay_result(
                                    event = 'Game End', 
                                    event_code = 'SJS505', 
                                    event_type_id = 'GAME_END', 
                                    description = 'Game End', ), 
                                about = openapi_client.models.game_play_about.GamePlay_about(
                                    event_idx = 315, 
                                    event_id = 505, 
                                    period = 3, 
                                    period_type = 'REGULAR', 
                                    ordinal_num = '3rd', 
                                    period_time = '20:00', 
                                    period_time_remaining = '00:00', 
                                    date_time = '2018-02-11T05:30:42Z', 
                                    goals = openapi_client.models.game_play_about_goals.GamePlay_about_goals(
                                        away = 4, 
                                        home = 6, ), ), 
                                coordinates = openapi_client.models.game_play_coordinates.GamePlay_coordinates(
                                    x = 0, 
                                    y = 0, ), 
                                team = openapi_client.models.game_play_team.GamePlay_team(
                                    id = 28, 
                                    name = 'San Jose Sharks', 
                                    link = '/api/v1/teams/28', 
                                    tri_code = 'SJS', ), )
                            ], 
                        scoring_plays = [
                            1.337
                            ], 
                        penalty_plays = [
                            1.337
                            ], 
                        plays_by_period = [
                            openapi_client.models.game_live_data_plays_plays_by_period_inner.Game_liveData_plays_playsByPeriod_inner(
                                start_index = 0, 
                                end_index = 114, )
                            ], 
                        current_play = openapi_client.models.game_play.GamePlay(), ), 
                    linescore = openapi_client.models.game_linescore.GameLinescore(
                        current_period = 3, 
                        current_period_ordinal = '3rd', 
                        current_period_time_remaining = 'Final', 
                        periods = [
                            openapi_client.models.game_period.GamePeriod(
                                period_type = 'REGULAR', 
                                start_time = '2018-02-11T03:09:50Z', 
                                end_time = '2018-02-11T03:44:47Z', 
                                num = 1, 
                                ordinal_num = '1st', 
                                home = openapi_client.models.game_period_home.GamePeriod_home(
                                    shots_on_goal = 14, 
                                    rink_side = 'left', ), 
                                away = openapi_client.models.game_period_away.GamePeriod_away(
                                    shots_on_goal = 9, 
                                    rink_side = 'right', ), )
                            ], 
                        shootout_info = openapi_client.models.game_linescore_shootout_info.GameLinescore_shootoutInfo(), 
                        teams = openapi_client.models.game_linescore_teams.GameLinescore_teams(), 
                        power_play_strength = 'Even', 
                        has_shootout = True, 
                        intermission_info = openapi_client.models.game_linescore_intermission_info.GameLinescore_intermissionInfo(
                            intermission_time_remaining = 0, 
                            intermission_time_elapsed = 0, 
                            in_intermission = True, ), 
                        power_play_info = openapi_client.models.game_linescore_power_play_info.GameLinescore_powerPlayInfo(
                            situation_time_remaining = 0, 
                            situation_time_elapsed = 72, 
                            in_situation = True, ), ), 
                    boxscore = openapi_client.models.game_boxscore.GameBoxscore(
                        officials = [
                            openapi_client.models.game_official.GameOfficial(
                                official = openapi_client.models.game_official_official.GameOfficial_official(
                                    id = 2071, 
                                    full_name = 'Tim Peel', 
                                    link = '/api/v1/people/2071', ), 
                                official_type = 'Linesman', )
                            ], ), 
                    decisions = openapi_client.models.game_live_data_decisions.Game_liveData_decisions(
                        winner = openapi_client.models.game_decision_player.GameDecisionPlayer(
                            id = 8477180, 
                            full_name = 'Aaron Dell', 
                            link = '/api/v1/people/8477180', ), 
                        loser = openapi_client.models.game_decision_player.GameDecisionPlayer(
                            id = 8477180, 
                            full_name = 'Aaron Dell', 
                            link = '/api/v1/people/8477180', ), 
                        first_star = , 
                        second_star = , 
                        third_star = , ), )
            )
        else:
            return Game(
        )
        """

    def testGame(self):
        """Test Game"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
