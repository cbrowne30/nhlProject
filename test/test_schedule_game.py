# coding: utf-8

"""
    NHL API

    Documenting the publicly accessible portions of the NHL API.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.schedule_game import ScheduleGame

class TestScheduleGame(unittest.TestCase):
    """ScheduleGame unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScheduleGame:
        """Test ScheduleGame
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScheduleGame`
        """
        model = ScheduleGame()
        if include_optional:
            return ScheduleGame(
                game_pk = 2017020851,
                link = '/api/v1/game/2017020851/feed/live',
                game_type = 'R',
                season = '20172018',
                game_date = '2018-02-11T03:00Z',
                status = openapi_client.models.game_game_data_status.Game_gameData_status(
                    abstract_game_state = 'Final', 
                    coded_game_state = '7', 
                    detailed_state = 'Final', 
                    status_code = '7', 
                    start_time_tbd = True, ),
                teams = openapi_client.models.schedule_game_teams.ScheduleGame_teams(
                    away = openapi_client.models.schedule_game_teams_away.ScheduleGame_teams_away(
                        league_record = openapi_client.models.schedule_game_teams_away_league_record.ScheduleGame_teams_away_leagueRecord(
                            wins = 23, 
                            losses = 27, 
                            ot = 4, 
                            type = 'league', ), 
                        score = 4, 
                        team = openapi_client.models.schedule_game_teams_away_team.ScheduleGame_teams_away_team(
                            id = 22, 
                            name = 'Edmonton Oilers', 
                            link = '/api/v1/teams/22', ), ), 
                    home = openapi_client.models.schedule_game_teams_home.ScheduleGame_teams_home(
                        score = 6, ), ),
                linescore = openapi_client.models.game_linescore.GameLinescore(
                    current_period = 3, 
                    current_period_ordinal = '3rd', 
                    current_period_time_remaining = 'Final', 
                    periods = [
                        openapi_client.models.game_period.GamePeriod(
                            period_type = 'REGULAR', 
                            start_time = '2018-02-11T03:09:50Z', 
                            end_time = '2018-02-11T03:44:47Z', 
                            num = 1, 
                            ordinal_num = '1st', 
                            home = openapi_client.models.game_period_home.GamePeriod_home(
                                goals = 2, 
                                shots_on_goal = 14, 
                                rink_side = 'left', ), 
                            away = openapi_client.models.game_period_away.GamePeriod_away(
                                goals = 0, 
                                shots_on_goal = 9, 
                                rink_side = 'right', ), )
                        ], 
                    shootout_info = openapi_client.models.game_linescore_shootout_info.GameLinescore_shootoutInfo(), 
                    teams = openapi_client.models.game_linescore_teams.GameLinescore_teams(), 
                    power_play_strength = 'Even', 
                    has_shootout = True, 
                    intermission_info = openapi_client.models.game_linescore_intermission_info.GameLinescore_intermissionInfo(
                        intermission_time_remaining = 0, 
                        intermission_time_elapsed = 0, 
                        in_intermission = True, ), 
                    power_play_info = openapi_client.models.game_linescore_power_play_info.GameLinescore_powerPlayInfo(
                        situation_time_remaining = 0, 
                        situation_time_elapsed = 72, 
                        in_situation = True, ), ),
                venue = openapi_client.models.game_game_data_venue.Game_gameData_venue(
                    name = 'SAP Center at San Jose', 
                    link = '/api/v1/venues/null', ),
                tickets = [
                    openapi_client.models.schedule_game_tickets_inner.ScheduleGame_tickets_inner(
                        ticket_type = 'buysell', 
                        ticket_link = 'http://www.ticketmaster.com/event/090052DD92E620B4?BRAND=ducks&extcmp=tm208344&utm_source=NHL.com&utm_medium=client&utm_campaign=NHL_LEAGUE_ANA&utm_content=SCHEDULE_PAGE&camefrom=CFC_DUCKS_1718_Web_DucksSchedule', )
                    ],
                content = openapi_client.models.schedule_game_content.ScheduleGame_content(
                    link = '/api/v1/game/2017020851/content', )
            )
        else:
            return ScheduleGame(
        )
        """

    def testScheduleGame(self):
        """Test ScheduleGame"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
