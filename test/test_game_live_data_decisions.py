# coding: utf-8

"""
    NHL API

    Documenting the publicly accessible portions of the NHL API.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.game_live_data_decisions import GameLiveDataDecisions

class TestGameLiveDataDecisions(unittest.TestCase):
    """GameLiveDataDecisions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameLiveDataDecisions:
        """Test GameLiveDataDecisions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameLiveDataDecisions`
        """
        model = GameLiveDataDecisions()
        if include_optional:
            return GameLiveDataDecisions(
                winner = openapi_client.models.game_decision_player.GameDecisionPlayer(
                    id = 8477180, 
                    full_name = 'Aaron Dell', 
                    link = '/api/v1/people/8477180', ),
                loser = openapi_client.models.game_decision_player.GameDecisionPlayer(
                    id = 8477180, 
                    full_name = 'Aaron Dell', 
                    link = '/api/v1/people/8477180', ),
                first_star = openapi_client.models.game_decision_player.GameDecisionPlayer(
                    id = 8477180, 
                    full_name = 'Aaron Dell', 
                    link = '/api/v1/people/8477180', ),
                second_star = openapi_client.models.game_decision_player.GameDecisionPlayer(
                    id = 8477180, 
                    full_name = 'Aaron Dell', 
                    link = '/api/v1/people/8477180', ),
                third_star = openapi_client.models.game_decision_player.GameDecisionPlayer(
                    id = 8477180, 
                    full_name = 'Aaron Dell', 
                    link = '/api/v1/people/8477180', )
            )
        else:
            return GameLiveDataDecisions(
        )
        """

    def testGameLiveDataDecisions(self):
        """Test GameLiveDataDecisions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
