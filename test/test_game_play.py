# coding: utf-8

"""
    NHL API

    Documenting the publicly accessible portions of the NHL API.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.game_play import GamePlay

class TestGamePlay(unittest.TestCase):
    """GamePlay unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GamePlay:
        """Test GamePlay
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GamePlay`
        """
        model = GamePlay()
        if include_optional:
            return GamePlay(
                players = [
                    openapi_client.models.game_play_players_inner.GamePlay_players_inner(
                        player = openapi_client.models.game_play_players_inner_player.GamePlay_players_inner_player(
                            id = 8476881, 
                            full_name = 'Tomas Hertl', 
                            link = '/api/v1/people/8476881', ), 
                        player_type = 'Winner', )
                    ],
                result = openapi_client.models.game_play_result.GamePlay_result(
                    event = 'Game End', 
                    event_code = 'SJS505', 
                    event_type_id = 'GAME_END', 
                    description = 'Game End', ),
                about = openapi_client.models.game_play_about.GamePlay_about(
                    event_idx = 315, 
                    event_id = 505, 
                    period = 3, 
                    period_type = 'REGULAR', 
                    ordinal_num = '3rd', 
                    period_time = '20:00', 
                    period_time_remaining = '00:00', 
                    date_time = '2018-02-11T05:30:42Z', 
                    goals = openapi_client.models.game_play_about_goals.GamePlay_about_goals(
                        away = 4, 
                        home = 6, ), ),
                coordinates = openapi_client.models.game_play_coordinates.GamePlay_coordinates(
                    x = 0, 
                    y = 0, ),
                team = openapi_client.models.game_play_team.GamePlay_team(
                    id = 28, 
                    name = 'San Jose Sharks', 
                    link = '/api/v1/teams/28', 
                    tri_code = 'SJS', )
            )
        else:
            return GamePlay(
        )
        """

    def testGamePlay(self):
        """Test GamePlay"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
